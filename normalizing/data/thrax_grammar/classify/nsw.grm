import '../utf8.grm' as utf;
import '../util.grm' as util;

q = util.quote;

# Markup for ordinary tokens that don't match anything else.
# output is a "name:" token. Cost is to make this analysis more expensive.

# Test: the Sparrowhawk-way is to treat tokens that do not match anything else as words. 
# This means that the verbalizer does not process these tokens. We only want tokens, that are 
# likely to be processed by the TTS g2p module, to be classified as "words". For the rest of non-matching
# tokens we need a "nsw" class.

nsw_token = utf.notSpace{2,100};
nsw =
  util.Insert["nsw: " q]
  (nsw_token <100>)
  util.Insert[q]
;

export NSW = Optimize[nsw];